#N canvas 756 38 756 916 10;
#X obj 816 800 loadbang;
#X obj 196 585 r aux;
#X obj 796 150 r notes;
#X obj 701 380 throw~ outL;
#X obj 785 383 throw~ outR;
#X obj 1011 826 r~ inL;
#X obj 1064 826 r~ inR;
#X obj 148 184 r knob1;
#X obj 148 254 s screenLine1;
#X msg 816 826 \; screenLine1 Basic \; screenLine2 Organelle \; screenLine3 Patch \; screenLine4 -------- \; screenLine5 Hello! \;;
#X obj 243 184 r knob2;
#X obj 337 184 r knob3;
#X obj 432 184 r knob4;
#X msg 243 219 Knob 2: \$1;
#X msg 148 219 Knob 1: \$1;
#X msg 337 219 Knob 3: \$1;
#X msg 432 219 Knob 4: \$1;
#X obj 243 254 s screenLine2;
#X obj 337 254 s screenLine3;
#X obj 432 254 s screenLine4;
#X obj 796 185 unpack;
#X obj 755 329 osc~;
#X obj 755 260 mtof;
#X floatatom 755 295 5 0 0 0 - - - 0;
#X obj 755 364 *~;
#X obj 834 260 / 127;
#X obj 834 330 line~;
#X msg 834 295 \$1 10;
#X text 866 188 Left: MIDI note / Right: Velocity;
#X text 866 156 Receive MIDI notes;
#X obj 62 364 int;
#X obj 62 294 * 6;
#X obj 62 329 + 1;
#X msg 62 399 \; led \$1 \;;
#X msg 115 363 \; led 0 \;;
#X obj 115 294 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 115 328 del 1000;
#X text 1122 825 L/R inputs are not used here.;
#X text 1123 894 be wary of feedback.;
#X text 1122 874 If testing with internal mic & speaker \,;
#X msg 73 700 Aux held!;
#X obj 73 735 s screenLine5;
#X msg 313 666 Aux released!;
#X obj 313 701 s screenLine5;
#X obj 196 620 sel 1;
#X obj 274 829 s screenLine5;
#X msg 274 794 Aux off;
#X obj 272 706 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 272 740 delay 1000;
#X msg 313 620 \; led 7 \;;
#X msg 340 794 \; led 0 \;;
#X msg 73 654 \; led 1 \;;
#X text 66 534 When Aux is pushed \, sel sends a signal left if the value is 1 (button is down) and right if the value is 0 (note off \, button has been released):;
#X obj 981 620 moses 72;
#X msg 972 672 \; led 3;
#X msg 1031 672 \; led 4;
#X obj 1148 620 sel 0;
#X msg 1148 690 \; led 0;
#X obj 1148 655 delay 10;
#X obj 911 239 send MIDILEDOn;
#X obj 911 204 send MIDILEDOff;
#X obj 981 585 receive MIDILEDOn;
#X obj 1148 585 receive MIDILEDOff;
#X text 1023 222 Send note/velocity data to wireless functions;
#X text 1061 494 WIRELESS FUNCTIONS;
#X text 866 124 BASIC SYNTH / MIDI FUNCTIONS;
#X text 197 505 AUX BUTTON;
#X text 231 124 KNOB FUNCTIONS;
#X text 972 749 Knob 1's LED functions can interfere with these!;
#X text 73 769 Right sets LED to red \; and prints a message \; to line 5;
#X text 1223 619 Check for a velocity value of zero \; (note off) and if found \, wait 10ms \; and turn the LED off.;
#X text 329 23 Use this patch to see how basic Organelle / Pd \; functions work \, and as a template for new patches.;
#X text 713 23 You can play a basic synth \, change knob values \, use \; the aux button \, send screen messages and set the LED \; colour. A simple wireless connection is also included \,;
#X text 31 23 ORGANELLE STARTER PATCH / CHEAT SHEET \; v1.0 \; nick.dimmock@gmail.com \; CC0 / Public domain;
#X text 168 149 Knobs feed values (0-1) to screenlines 1-4:;
#X text 187 319 Knob 1 changes the LED colour and turns it on \; After 1s \, it turns it off again \; LED colours range from 1 to 7 \, so we multiply \; the knob value by 6 and add 1;
#X text 876 291 Pack velocity value with 10 (for ms);
#X text 876 323 Use line~ to create 10ms ramp to new velocity \; (to avoid note-on clicks);
#X text 596 259 Convert note to frequency;
#X text 596 291 Check the result here >;
#X text 596 323 Here's our simple osc >;
#X text 785 350 Set osc amplitude (multiply by velocity);
#X text 876 259 Divide velocity by 127 to get 0..1 value;
#X text 625 414 Thow oscillator output to Organelle L&R handlers in mother.pd to create sound!;
#X text 383 739 Left sets the LED to white and shows a \; 'released' message on line 5 then after 1a \; turns the LED off and shows an 'off' message.;
#X text 963 505 Two wireless fucntions triggered by the synth above. MIDILEDOn recieves the MIDI note value \, and MIDILEDOff receives the velocity value.;
#X text 724 584 Check MIDI note value. Lower than 72 \; is ocatve one \, 72 or higher is ocatave \; two. Set a green or blue LED depending \; on the result.;
#X text 724 649 The moses function is used to check \; the value and route the signal.;
#X text 972 717 Green;
#X text 1031 717 Blue;
#X obj 551 991 loadbang;
#X obj 551 1074 play_samples;
#X msg 553 1031 symbol tubed_rhodes;
#X connect 0 0 9 0;
#X connect 1 0 44 0;
#X connect 2 0 20 0;
#X connect 7 0 14 0;
#X connect 7 0 31 0;
#X connect 7 0 35 0;
#X connect 10 0 13 0;
#X connect 11 0 15 0;
#X connect 12 0 16 0;
#X connect 13 0 17 0;
#X connect 14 0 8 0;
#X connect 15 0 18 0;
#X connect 16 0 19 0;
#X connect 20 0 22 0;
#X connect 20 0 59 0;
#X connect 20 1 25 0;
#X connect 20 1 60 0;
#X connect 21 0 24 0;
#X connect 22 0 23 0;
#X connect 23 0 21 0;
#X connect 24 0 3 0;
#X connect 24 0 4 0;
#X connect 25 0 27 0;
#X connect 26 0 24 1;
#X connect 27 0 26 0;
#X connect 30 0 33 0;
#X connect 31 0 32 0;
#X connect 32 0 30 0;
#X connect 35 0 36 0;
#X connect 36 0 34 0;
#X connect 40 0 41 0;
#X connect 42 0 43 0;
#X connect 44 0 40 0;
#X connect 44 0 51 0;
#X connect 44 1 42 0;
#X connect 44 1 49 0;
#X connect 44 1 47 0;
#X connect 46 0 45 0;
#X connect 47 0 48 0;
#X connect 48 0 46 0;
#X connect 48 0 50 0;
#X connect 53 0 54 0;
#X connect 53 1 55 0;
#X connect 56 0 58 0;
#X connect 58 0 57 0;
#X connect 61 0 53 0;
#X connect 62 0 56 0;
#X connect 90 0 92 0;
#X connect 92 0 91 0;
